[package]
name = "firefly_cli"
version = "0.10.1"
rust-version = "1.82.0"
edition = "2021"
authors = ["Firefly Zero team"]
description = "CLI tool for working with Firefly Zero"
homepage = "https://fireflyzero.com/"
repository = "https://github.com/firefly-zero/firefly-cli"
license = "MIT"
keywords = ["gamedev", "firefly-zero", "cli"]
categories = [
    "command-line-utilities",
    "game-development",
    "development-tools",
    "compilers",
    "wasm",
]

[dependencies]
# Simpler error handling
anyhow = "1.0.98"
# Get current date and time
chrono = { version = "0.4.41", default-features = false, features = ["clock"] }
# Framework for parsing CLI args
clap = { version = "4.5.41", features = ["derive"] }
# Detect message boundaries in serial port output from device
cobs = "0.4.0"
# TUI for the "monitor" command, colored terminal output
crossterm = "0.29.0"
# Convert binary hash into hex
data-encoding = "2.9.0"
# Find the best place to sotre the VFS
directories = "6.0.0"
# Serialize app config into meta file in the ROM
firefly-types = { version = "0.5.1" }
# Decode wav files
hound = "3.5.1"
# Parse PNG images
image = { version = "0.25.6", default-features = false, features = ["png"] }
# Random device name generation
rand = "0.8.5"
# Signatures
rsa = { version = "0.9.8", default-features = false, features = [
    "std",
    "sha2",
] }
rust-embed = { version = "8.7.1", default-features = false, features = [
    "debug-embed",
] }
# REPL
rustyline = "15.0.0"
# Deserialize firefly.toml (required by `toml`)
serde = { version = "1.0.219", features = ["serde_derive", "derive"] }
# Deserialize JSON API responses from the firefly catalog
serde_json = "1.0.140"
# Communicating with running device
serialport = "4.7.1"
# Calculate file checksum
sha2 = "0.10.9"
# Deserialize firefly.toml
toml = "0.8.22"
# Download remote files (`url` field in `firefly.toml`)
ureq = "2.12.1"
# Build together post-processed wasm binaries
wasm-encoder = "0.230.0"
# Parse wasm binaries for post-processing (removing custom sections)
wasmparser = "0.230.0"
# Work with zip archives (distribution format for ROMs)
zip = { version = "4.3.0", default-features = false, features = ["zstd"] }
